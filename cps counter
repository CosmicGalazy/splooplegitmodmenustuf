const Cps = {
  log: console.log,
  count: 0,
  reduce() {
    this.count -= 1;
    this.updateText();
  },
  increase() {
    this.count += 1;
    this.updateText();
  },
  sleep: () => new Promise(resolve => setTimeout(resolve, 1000)),
  createElement() {
    this.element = document.createElement("div");
    this.element.setText = count => {
      const countNum = parseInt(count);
      if (countNum < 0) {
        count = 0;
        Cps.log("bug...");
      }
      this.element.textContent = `Cps: ${count}`;
    };
    this.element.setText(0);
    this.style = this.element.style;
    this.element.classList.add("text-shadowed-3");
    Object.assign(this.style, {
      position: "absolute",
      top: "20px",
      width: "100%",
      pointerEvents: "none",
      textAlign: "center",
      color: "white",
      fontSize: "20px"
    });
    document.body.appendChild(this.element);
  },
  updateText() {
    this.element.setText(this.count);
  },
  update: async function() {
    this.increase();
    await this.sleep();
    this.reduce();
  },
  spaceActive: false
};

Cps.createElement();

document.addEventListener("mousedown", () => Cps.update());

document.addEventListener("keydown", event => {
  if (event.code !== "Space" || Cps.spaceActive) return;
  Cps.update();
  Cps.spaceActive = true;
});

document.addEventListener("keyup", event => {
  if (event.code !== "Space") return;
  Cps.spaceActive = false;
});
